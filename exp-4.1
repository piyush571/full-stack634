const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

let employees = [
    { name: 'Alice', id: 'E101' },
    { name: 'Bob', id: 'E102' },
    { name: 'Charlie', id: 'E103' }
];

function showMenu() {
    console.log('\nEmployee Management System');
    console.log('1. Add Employee');
    console.log('2. List Employees');
    console.log('3. Remove Employee');
    console.log('4. Exit');

    rl.question('Enter your choice: ', (choice) => {
        switch (choice.trim()) {
            case '1':
                addEmployee();
                break;
            case '2':
                listEmployees();
                break;
            case '3':
                removeEmployee();
                break;
            case '4':
                console.log('Exiting application. Goodbye! üëã');
                rl.close();
                break;
            default:
                console.log('Invalid choice. Please enter a number between 1 and 4.');
                showMenu();
                break;
        }
    });
}

function addEmployee() {
    rl.question('Enter employee name: ', (name) => {
        rl.question('Enter employee ID: ', (id) => {
            if (name && id) {
                employees.push({ name: name.trim(), id: id.trim() });
                console.log(‚úÖ Employee '${name}' added successfully!);
            } else {
                console.log('‚ùå Name and ID cannot be empty.');
            }
            showMenu();
        });
    });
}

function listEmployees() {
    console.log('\nEmployee List:');
    if (employees.length === 0) {
        console.log('No employees found.');
    } else {
        employees.forEach((employee, index) => {
            console.log(${index + 1}. Name: ${employee.name}, ID: ${employee.id});
        });
    }
    showMenu();
}

function removeEmployee() {
    rl.question('Enter the ID of the employee to remove: ', (id) => {
        const employeeId = id.trim();
        
        const index = employees.findIndex(emp => emp.id === employeeId);

        if (index !== -1) {
            const removedEmployee = employees.splice(index, 1);
            console.log(‚úÖ Employee '${removedEmployee[0].name}' (ID: ${employeeId}) has been removed.);
        } else {
            console.log(‚ùå Employee with ID '${employeeId}' not found.);
        }
        showMenu();
    });
}

console.log('Welcome to the Employee Management System!');
showMenu();
